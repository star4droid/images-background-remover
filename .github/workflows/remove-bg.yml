name: Remove Backgrounds

on:
  workflow_dispatch:   # Run only manually

jobs:
  remove-bg:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pillow rembg onnxruntime requests

      - name: Ensure model exists
        run: |
          mkdir -p models
          MODEL_PATH="models/u2net.onnx"
          if [ ! -f "$MODEL_PATH" ]; then
            echo "⚡ Model not found, downloading..."
            curl -L "https://github.com/danielgatis/rembg/releases/download/v0.0.0/u2net.onnx" -o $MODEL_PATH
          else
            echo "✅ Model already exists in repo."
          fi

      - name: Commit model to repo if missing
        run: |
          if [ -n "$(git status --porcelain models)" ]; then
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add models
            git commit -m "Add downloaded model"
            git push
          fi

      - name: Create output folder
        run: mkdir -p output

      - name: Remove backgrounds from images
        run: |
          python <<EOF
          import os
          from rembg import remove
          from PIL import Image

          input_dir = "images"
          output_dir = "output"
          os.makedirs(output_dir, exist_ok=True)

          for file_name in os.listdir(input_dir):
              if file_name.lower().endswith((".png", ".jpg", ".jpeg")):
                  input_path = os.path.join(input_dir, file_name)
                  output_path = os.path.join(output_dir, os.path.splitext(file_name)[0] + ".png")

                  img = Image.open(input_path)
                  out = remove(img, session=None, model_name="u2net")  # will use models/u2net.onnx
                  out.save(output_path)
                  print(f"✅ Processed: {file_name}")
          EOF

      - name: Upload processed images
        uses: actions/upload-artifact@v4
        with:
          name: processed-images
          path: output/
